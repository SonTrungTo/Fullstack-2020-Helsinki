[{"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/index.tsx":"1","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/App.tsx":"2","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/state/index.ts":"3","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/constants.ts":"4","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/state/reducer.ts":"5","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/state/state.tsx":"6","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/PatientListPage/index.tsx":"7","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/components/HealthRatingBar.tsx":"8","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/AddPatientModal/index.tsx":"9","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/AddPatientModal/AddPatientForm.tsx":"10","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/types.ts":"11","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/AddPatientModal/FormField.tsx":"12","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/PatientInfo/index.tsx":"13","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/EntryDetails/index.tsx":"14","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/utils.ts":"15","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/components/OccupationalHealthcare.tsx":"16","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/components/Hospital.tsx":"17","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/components/HealthCheck.tsx":"18"},{"size":302,"mtime":1610019308365,"results":"19","hashOfConfig":"20"},{"size":1617,"mtime":1610149776613,"results":"21","hashOfConfig":"20"},{"size":52,"mtime":1609818193960,"results":"22","hashOfConfig":"20"},{"size":55,"mtime":1609714799858,"results":"23","hashOfConfig":"20"},{"size":1854,"mtime":1610245890233,"results":"24","hashOfConfig":"20"},{"size":987,"mtime":1610243726365,"results":"25","hashOfConfig":"20"},{"size":2597,"mtime":1610241507601,"results":"26","hashOfConfig":"20"},{"size":630,"mtime":1609819770424,"results":"27","hashOfConfig":"20"},{"size":713,"mtime":1609714799858,"results":"28","hashOfConfig":"20"},{"size":3009,"mtime":1609842853095,"results":"29","hashOfConfig":"20"},{"size":1236,"mtime":1610302864930,"results":"30","hashOfConfig":"20"},{"size":2585,"mtime":1609714799858,"results":"31","hashOfConfig":"20"},{"size":4085,"mtime":1610303238994,"results":"32","hashOfConfig":"20"},{"size":728,"mtime":1610302899894,"results":"33","hashOfConfig":"20"},{"size":123,"mtime":1610301276011,"results":"34","hashOfConfig":"20"},{"size":1127,"mtime":1610303058010,"results":"35","hashOfConfig":"20"},{"size":1258,"mtime":1610303054134,"results":"36","hashOfConfig":"20"},{"size":1784,"mtime":1610303026426,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1sodre3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/index.tsx",[],[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/App.tsx",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/state/index.ts",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/constants.ts",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/state/reducer.ts",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/state/state.tsx",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/PatientListPage/index.tsx",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/components/HealthRatingBar.tsx",["78"],"import React from 'react';\nimport { Rating } from 'semantic-ui-react';\n\ntype BarProps = {\n  rating: number;\n  showText: boolean;\n};\n\nconst HEALTHBAR_TEXTS = [\n  'The patient is in great shape',\n  'The patient has a low risk of getting sick',\n  'The patient has a high risk of getting sick',\n  'The patient has a diagnosed condition',\n];\n\nconst HealthRatingBar = ({ rating, showText }: BarProps) => {\n  return (\n    <div className=\"health-bar\">\n      {<Rating icon=\"heart\" disabled rating={4 - rating} maxRating={4} />}\n      {showText ? <p>{HEALTHBAR_TEXTS[rating]}</p> : null}\n    </div>\n  );\n};\n\nexport default HealthRatingBar;\n","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/AddPatientModal/index.tsx",["79"],"import React from 'react';\nimport { Modal, Segment } from 'semantic-ui-react';\nimport AddPatientForm, { PatientFormValues } from './AddPatientForm';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (values: PatientFormValues) => void;\n  error?: string;\n}\n\nconst AddPatientModal = ({ modalOpen, onClose, onSubmit, error }: Props) => (\n  <Modal open={modalOpen} onClose={onClose} centered={false} closeIcon>\n    <Modal.Header>Add a new patient</Modal.Header>\n    <Modal.Content>\n      {error && <Segment inverted color=\"red\">{`Error: ${error}`}</Segment>}\n      <AddPatientForm onSubmit={onSubmit} onCancel={onClose} />\n    </Modal.Content>\n  </Modal>\n);\n\nexport default AddPatientModal;\n","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/AddPatientModal/AddPatientForm.tsx",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/types.ts",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/AddPatientModal/FormField.tsx",["80"],"import React from \"react\";\nimport { ErrorMessage, Field, FieldProps, FormikProps } from \"formik\";\nimport { Dropdown, DropdownProps, Form } from \"semantic-ui-react\";\nimport { Diagnosis, Gender } from \"../types\";\n\n// structure of a single option\nexport type GenderOption = {\n  value: Gender;\n  label: string;\n};\n\n// props for select field component\ntype SelectFieldProps = {\n  name: string;\n  label: string;\n  options: GenderOption[];\n};\n\nexport const SelectField: React.FC<SelectFieldProps> = ({\n  name,\n  label,\n  options\n}: SelectFieldProps) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field as=\"select\" name={name} className=\"ui dropdown\">\n      {options.map(option => (\n        <option key={option.value} value={option.value}>\n          {option.label || option.value}\n        </option>\n      ))}\n    </Field>\n  </Form.Field>\n);\n\ninterface TextProps extends FieldProps {\n  label: string;\n  placeholder: string;\n}\n\nexport const TextField: React.FC<TextProps> = ({\n  field,\n  label,\n  placeholder\n}) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field placeholder={placeholder} {...field} />\n    <div style={{ color:'red' }}>\n      <ErrorMessage name={field.name} />\n    </div>\n  </Form.Field>\n);\n\n/*\n  for exercises 9.24.-\n*/\ninterface NumberProps extends FieldProps {\n  label: string;\n  errorMessage?: string;\n  min: number;\n  max: number;\n}\n\nexport const NumberField: React.FC<NumberProps> = ({ field, label, min, max }) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field {...field} type='number' min={min} max={max} />\n\n    <div style={{ color:'red' }}>\n      <ErrorMessage name={field.name} />\n    </div>\n  </Form.Field>\n);\n\nexport const DiagnosisSelection = ({\n  diagnoses,\n  setFieldValue,\n  setFieldTouched\n}: {\n  diagnoses: Diagnosis[];\n  setFieldValue: FormikProps<{ diagnosisCodes: string[] }>[\"setFieldValue\"];\n  setFieldTouched: FormikProps<{ diagnosisCodes: string[] }>[\"setFieldTouched\"];\n}) => {\n  const field = \"diagnosisCodes\";\n  const onChange = (\n    _event: React.SyntheticEvent<HTMLElement, Event>,\n    data: DropdownProps\n  ) => {\n    setFieldTouched(field, true);\n    setFieldValue(field, data.value);\n  };\n\n  const stateOptions = diagnoses.map(diagnosis => ({\n    key: diagnosis.code,\n    text: `${diagnosis.name} (${diagnosis.code})`,\n    value: diagnosis.code\n  }));\n\n  return (\n    <Form.Field>\n      <label>Diagnoses</label>\n      <Dropdown\n        fluid\n        multiple\n        search\n        selection\n        options={stateOptions}\n        onChange={onChange}\n      />\n      <ErrorMessage name={field} />\n    </Form.Field>\n  );\n};\n","/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/PatientInfo/index.tsx",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/EntryDetails/index.tsx",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/utils.ts",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/components/OccupationalHealthcare.tsx",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/components/Hospital.tsx",[],"/home/stt92/Documents/FullStack2020_Helsinki/part9/patientor/frontend/src/components/HealthCheck.tsx",[],{"ruleId":"81","severity":1,"message":"82","line":16,"column":25,"nodeType":"83","messageId":"84","endLine":16,"endColumn":60},{"ruleId":"81","severity":1,"message":"82","line":12,"column":25,"nodeType":"83","messageId":"84","endLine":12,"endColumn":76},{"ruleId":"81","severity":1,"message":"82","line":76,"column":35,"nodeType":"83","messageId":"84","endLine":84,"endColumn":6},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType"]